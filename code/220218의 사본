{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"220218","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyPTugbu+Tn0aI9UrrBHsTTh"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"QeWjfWb7Wj0r","executionInfo":{"status":"ok","timestamp":1645154412004,"user_tz":-540,"elapsed":291,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"76e9ef00-3d70-4ed8-c942-1eaaf4703f4c"},"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'1.0.2'"]},"metadata":{},"execution_count":32}],"source":["import sklearn\n","# sklearn의 동작 유무 확인, 버전 확인\n","sklearn.__version__"]},{"cell_type":"code","source":["from sklearn.datasets import load_iris\n","\n","# iris 정보를 얻어오기\n","iris = load_iris()\n","iris\n","# 타입 확인\n","type(iris)\n","# 가지고 있는 key 정보(내부 정보)\n","iris.keys()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p3A8WMwOW4a-","executionInfo":{"status":"ok","timestamp":1645154413960,"user_tz":-540,"elapsed":4,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"abeefe29-13ae-4b89-f0c3-445fb240b747"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dict_keys(['data', 'target', 'frame', 'target_names', 'DESCR', 'feature_names', 'filename', 'data_module'])"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["# print(iris['DESCR'])\n","iris['data_module']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"f4Q_R_W0Xbu4","executionInfo":{"status":"ok","timestamp":1645154422499,"user_tz":-540,"elapsed":270,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"7273fa80-3927-4ebd-e7ca-bfc898f2194c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'sklearn.datasets.data'"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["# iris_data = iris.data\n","iris_data = iris['data']\n","iris_data\n","\n","type(iris_data)\n","# :의 왼쪽은 시작, 오른쪽은 끝, 없으면 0이 생략\n","print(iris_data[:5])\n","iris_data[1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PlDNxj3Ff5TJ","executionInfo":{"status":"ok","timestamp":1645154424012,"user_tz":-540,"elapsed":292,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"1a3df1a9-4393-4011-e358-8806c5574392"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[5.1 3.5 1.4 0.2]\n"," [4.9 3.  1.4 0.2]\n"," [4.7 3.2 1.3 0.2]\n"," [4.6 3.1 1.5 0.2]\n"," [5.  3.6 1.4 0.2]]\n"]},{"output_type":"execute_result","data":{"text/plain":["array([4.9, 3. , 1.4, 0.2])"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["iris_target = iris.target\n","iris_target"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EHHwkoLNhZlk","executionInfo":{"status":"ok","timestamp":1645154425923,"user_tz":-540,"elapsed":278,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"ad9df284-e44e-45f8-815c-1ab719016575"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["iris_feature_names = iris.feature_names\n","iris_feature_names"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aObLLEg7h2Vg","executionInfo":{"status":"ok","timestamp":1645154428775,"user_tz":-540,"elapsed":266,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"a11c78fa-0094-4bae-d564-37de79ffe094"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['sepal length (cm)',\n"," 'sepal width (cm)',\n"," 'petal length (cm)',\n"," 'petal width (cm)']"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["import pandas as pd\n","\n","iris = load_iris()\n","# data와 feature 정보로 dataframe 생성\n","df_iris = pd.DataFrame(data=iris['data'], columns=iris['feature_names'])\n","# 상위 5개의 데이터 확인\n","df_iris.head()\n","\n","# 각 데이터별 결과 저장\n","df_iris['label'] = iris['target']\n","# 하위 5개의 데이터 확인\n","df_iris.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"UovPiS9okgrt","executionInfo":{"status":"ok","timestamp":1645154430643,"user_tz":-540,"elapsed":264,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"ea9fd594-2356-4fee-9990-11790caba43c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-635f0645-159a-46eb-8d9e-40031b7638e0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal length (cm)</th>\n","      <th>sepal width (cm)</th>\n","      <th>petal length (cm)</th>\n","      <th>petal width (cm)</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>145</th>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-635f0645-159a-46eb-8d9e-40031b7638e0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-635f0645-159a-46eb-8d9e-40031b7638e0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-635f0645-159a-46eb-8d9e-40031b7638e0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["     sepal length (cm)  sepal width (cm)  ...  petal width (cm)  label\n","145                6.7               3.0  ...               2.3      2\n","146                6.3               2.5  ...               1.9      2\n","147                6.5               3.0  ...               2.0      2\n","148                6.2               3.4  ...               2.3      2\n","149                5.9               3.0  ...               1.8      2\n","\n","[5 rows x 5 columns]"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test = train_test_split(iris.data, iris.target)\n","X_train[:5]\n","\n","print('전체 데이터 크기 : ', iris['data'].size)\n","print('train 데이터의 기본 크기는 전체의 75% : ', X_train.size)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Jtsjs4g9k3Mp","executionInfo":{"status":"ok","timestamp":1645154433608,"user_tz":-540,"elapsed":259,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"d55710fa-38e0-49b4-c60f-05b6af2aaefe"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["전체 데이터 크기 :  600\n","train 데이터의 기본 크기는 전체의 75% :  448\n"]}]},{"cell_type":"markdown","source":["> 위의 코드를 실행할 때마다 다른 결과를 얻게 된다.\n","\n","```\n","array([[5.6, 2.5, 3.9, 1.1],\n","       [4.4, 2.9, 1.4, 0.2],\n","       [5.5, 2.6, 4.4, 1.2],\n","       [7.2, 3.2, 6. , 1.8],\n","       [6.1, 2.6, 5.6, 1.4]])\n","\n","array([[5.1, 3.4, 1.5, 0.2],\n","       [4.8, 3.4, 1.6, 0.2],\n","       [5.8, 2.6, 4. , 1.2],\n","       [5.7, 2.8, 4.1, 1.3],\n","       [6.8, 2.8, 4.8, 1.4]])\n","```\n"],"metadata":{"id":"XGseh95PpSmi"}},{"cell_type":"code","source":["# 위와 같이 실행할때마다 다른 결과가 나타나는 것을 방지하기 위해 random_state 사용\n","X_train, X_test, y_train, y_test = train_test_split(iris.data, iris.target, test_size=0.2, random_state=62)\n","X_train[:5]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hyp7sQyjo2VQ","executionInfo":{"status":"ok","timestamp":1645151116462,"user_tz":-540,"elapsed":284,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"76e9592c-4468-41bd-98a3-a1f3403b29fb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[5.5, 2.3, 4. , 1.3],\n","       [5.9, 3.2, 4.8, 1.8],\n","       [5.8, 2.7, 5.1, 1.9],\n","       [6.9, 3.2, 5.7, 2.3],\n","       [5.8, 4. , 1.2, 0.2]])"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["# 처음부터 3번째 열까지, 모든 feature 정보까지 출력\n","df_iris.iloc[:3, :4]"],"metadata":{"id":"IpFjcn3EqFw0","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1645161222153,"user_tz":-540,"elapsed":291,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"4279085b-6565-4659-c056-cfa2c27d22e5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-500f93bb-2e91-4791-adcc-709b47d5bbdc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal length (cm)</th>\n","      <th>sepal width (cm)</th>\n","      <th>petal length (cm)</th>\n","      <th>petal width (cm)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-500f93bb-2e91-4791-adcc-709b47d5bbdc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-500f93bb-2e91-4791-adcc-709b47d5bbdc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-500f93bb-2e91-4791-adcc-709b47d5bbdc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["   sepal length (cm)  sepal width (cm)  petal length (cm)  petal width (cm)\n","0                5.1               3.5                1.4               0.2\n","1                4.9               3.0                1.4               0.2\n","2                4.7               3.2                1.3               0.2"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["train_test_split(df_iris.iloc[:, :4], df_iris['label'])"],"metadata":{"id":"vXTAy6R-rBpC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_iris_data = df_iris.drop('label', axis=1)\n","df_iris_data\n","\n","df_iris_label = df_iris['label']\n","df_iris_label"],"metadata":{"id":"oPBCvqOLrsi5"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[""],"metadata":{"id":"-fO0t0eb0-oM"}},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeClassifier\n","\n","# 모델 얻어오기\n","df_clf = DecisionTreeClassifier()\n","# 모델 생성\n","df_clf.fit(X_train, y_train)\n","\n","DecisionTreeClassifier()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vo5u3ABPr9kt","executionInfo":{"status":"ok","timestamp":1645165359239,"user_tz":-540,"elapsed":253,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"7c5564f2-f3bc-4545-86c0-a8d4e5bfe86b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DecisionTreeClassifier()"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":[""],"metadata":{"id":"dFo6aEpSdoxu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 검증데이터를 통해 예측 정보 얻기\n","pred = dt_clf.predict(X_test)\n","# 예측 정보 출력\n","print(pred)\n","# 실 데이터 출력\n","print(y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":245},"id":"8CgvzFNO0SZ-","executionInfo":{"status":"error","timestamp":1645165361828,"user_tz":-540,"elapsed":267,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"e7efebba-0966-442a-c941-497d49fa2780"},"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-52-c94239af2f56>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# 검증데이터를 통해 예측 정보 얻기\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mpred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdt_clf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0;31m# 예측 정보 출력\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# 실 데이터 출력\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: predict() missing 1 required positional argument: 'X'"]}]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","\n","print('예측 정확도 : {0: .4f}'.format(accuracy_score(y_test, pred)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":209},"id":"_sD2rniQ0siM","executionInfo":{"status":"error","timestamp":1645154111286,"user_tz":-540,"elapsed":303,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"365936ba-da60-4a5d-e4de-1e4f76cf2b6b"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-31-4fc5d6651f8d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmetrics\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0maccuracy_score\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'예측 정확도 : {0: .4f}'\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maccuracy_score\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'pred' is not defined"]}]},{"cell_type":"code","source":["# iris 정보를 읽어 들이고 데이터와 타겟 정보를 각각 5개씩 출력하시오\n","\n","from sklearn.datasets import load_iris\n","\n","iris = load_iris()\n","iris_data = iris['data']\n","iris_label = iris['target']\n","\n","print(iris_data[:5])\n","print(iris_label[:5])"],"metadata":{"id":"AHCra_u9Pcd6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeClassifier\n","\n","dt_clf = DecisionTreeClassifier"],"metadata":{"id":"ZIPuibtdRmz7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import KFold\n","\n","kfold = KFold(n_splits=5)"],"metadata":{"id":"RP2TAvp3SSTU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# shape이라는 것은 데이터의 모양을 보여준다.\n","iris_data.shape\n","# 행의 개수\n","iris_data.shape[0]\n","# 열(feature)의 개수\n","iris_data.shape[1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SzxTFqbCSrQK","executionInfo":{"status":"ok","timestamp":1645161988351,"user_tz":-540,"elapsed":337,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"c11da818-4835-4879-8062-6b75b5cf5431"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["for train_idx, test_idx in kfold.split(iris_data):\n","  print('train index')\n","  print(train_idx)\n","  print('test index')\n","  print(test_idx)\n","  print('='*50)"],"metadata":{"id":"DvXg68TjTopD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","import numpy as np\n","\n","df_clf = DecisionTreeClassifier()\n","kfold=StratifiedKFold(n_splits=3)\n","\n","\n","cv_accuracy=[]\n","n=iter = 1\n","\n","for train_idx, test_idx in kfold.split(iris_data, iris_label):\n","  # 훈련용 데이터\n","  X_train = iris_data[train_idx]\n","  y_train = iris_label[train_idx]\n","\n","  # 검증 데이터\n","  X_test = iris_data[test_idx]\n","  y_test = iris_label[test_idx]\n","\n","  # 모델 학습\n","  dt_clf.fit(X_train, y_train)\n","  # 예측 출력\n","  pred = dt_clf.fit.predict(X_test)\n","  # 정확도 출력\n","  acc = round(accuracy_score(y_test, pred), 4)\n","  print(acc)\n","\n","print('='*50)\n","print(round(np.mean(cv_accuracy), 4))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":245},"id":"fgL_Xge0WJJc","executionInfo":{"status":"error","timestamp":1645167858832,"user_tz":-540,"elapsed":270,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"aefed5eb-3dce-4bdf-d8e9-54bcd7d54d46"},"execution_count":58,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-58-e52d768ec3db>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     19\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     20\u001b[0m   \u001b[0;31m# 모델 학습\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 21\u001b[0;31m   \u001b[0mdt_clf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     22\u001b[0m   \u001b[0;31m# 예측 출력\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     23\u001b[0m   \u001b[0mpred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdt_clf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: fit() missing 1 required positional argument: 'y'"]}]},{"cell_type":"code","source":["x_test=[[3, 3, 1, 1]]\n","dt_clf.predict(x_test)\n","\n","if pred[0]==1:\n","  print('<p>setosa</p>')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":190},"id":"8k1HZ7m4fo4a","executionInfo":{"status":"error","timestamp":1645165349060,"user_tz":-540,"elapsed":287,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"3d0e299d-febc-4ec6-eb19-3d1bb1043ac8"},"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-50-2fde0de36f43>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mx_test\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mdt_clf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: predict() missing 1 required positional argument: 'X'"]}]},{"cell_type":"code","source":["df_iris['label'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EaRTtH2LgR71","executionInfo":{"status":"ok","timestamp":1645165930780,"user_tz":-540,"elapsed":255,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"6c3f89df-7d80-4693-ad2f-5ef1f71ba123"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    50\n","1    50\n","2    50\n","Name: label, dtype: int64"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["from sklearn.model_selection import StratifiedKFold\n","kfold = StratifiedKFold(n_splits=3)\n","\n","kfold = KFold(n_splits=3)\n","\n","for train_idx, test_idx in kfold.split(iris_data):\n","  y_train = df_iris['label'].iloc[train_idx]\n","  y_test = df_iris['label'].iloc[test_idx]\n","\n","  print(y_train.value_counts())\n","  print(y_test.value_counts())\n","  print('='*50)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aL_JWhjsiAOs","executionInfo":{"status":"ok","timestamp":1645166293025,"user_tz":-540,"elapsed":259,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"144efd7e-222d-42aa-abbd-848900b87c15"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1    50\n","2    50\n","Name: label, dtype: int64\n","0    50\n","Name: label, dtype: int64\n","==================================================\n","0    50\n","2    50\n","Name: label, dtype: int64\n","1    50\n","Name: label, dtype: int64\n","==================================================\n","0    50\n","1    50\n","Name: label, dtype: int64\n","2    50\n","Name: label, dtype: int64\n","==================================================\n"]}]},{"cell_type":"code","source":["from sklearn.model_selection import cross_val_score\n","\n","df_clf = DecisionTreeClassifier()\n","scores = cross_val_score(dt_clf, X=iris_data, y=iris_label, scoring = 'accuracy', cv=3)\n","scores"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":450},"id":"zDbOZXgqp4iS","executionInfo":{"status":"error","timestamp":1645168077033,"user_tz":-540,"elapsed":273,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"645f2321-4482-4695-c7e5-4818630ec592"},"execution_count":59,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mEmpty\u001b[0m                                     Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/joblib/parallel.py\u001b[0m in \u001b[0;36mdispatch_one_batch\u001b[0;34m(self, iterator)\u001b[0m\n\u001b[1;32m    821\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 822\u001b[0;31m                 \u001b[0mtasks\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_ready_batches\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mblock\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    823\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mqueue\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mEmpty\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.7/queue.py\u001b[0m in \u001b[0;36mget\u001b[0;34m(self, block, timeout)\u001b[0m\n\u001b[1;32m    166\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_qsize\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 167\u001b[0;31m                     \u001b[0;32mraise\u001b[0m \u001b[0mEmpty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    168\u001b[0m             \u001b[0;32melif\u001b[0m \u001b[0mtimeout\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mEmpty\u001b[0m: ","\nDuring handling of the above exception, another exception occurred:\n","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-59-8b3fbdc39a75>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mdf_clf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mDecisionTreeClassifier\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mscores\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcross_val_score\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdt_clf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0miris_data\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0miris_label\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mscoring\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'accuracy'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcv\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0mscores\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_validation.py\u001b[0m in \u001b[0;36mcross_val_score\u001b[0;34m(estimator, X, y, groups, scoring, cv, n_jobs, verbose, fit_params, pre_dispatch, error_score)\u001b[0m\n\u001b[1;32m    518\u001b[0m         \u001b[0mfit_params\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfit_params\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    519\u001b[0m         \u001b[0mpre_dispatch\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpre_dispatch\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 520\u001b[0;31m         \u001b[0merror_score\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merror_score\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    521\u001b[0m     )\n\u001b[1;32m    522\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mcv_results\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"test_score\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_validation.py\u001b[0m in \u001b[0;36mcross_validate\u001b[0;34m(estimator, X, y, groups, scoring, cv, n_jobs, verbose, fit_params, pre_dispatch, return_train_score, return_estimator, error_score)\u001b[0m\n\u001b[1;32m    281\u001b[0m             \u001b[0merror_score\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merror_score\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    282\u001b[0m         )\n\u001b[0;32m--> 283\u001b[0;31m         \u001b[0;32mfor\u001b[0m \u001b[0mtrain\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mcv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgroups\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    284\u001b[0m     )\n\u001b[1;32m    285\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, iterable)\u001b[0m\n\u001b[1;32m   1041\u001b[0m             \u001b[0;31m# remaining jobs.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1042\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_iterating\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1043\u001b[0;31m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdispatch_one_batch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1044\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_iterating\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_original_iterator\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1045\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/joblib/parallel.py\u001b[0m in \u001b[0;36mdispatch_one_batch\u001b[0;34m(self, iterator)\u001b[0m\n\u001b[1;32m    831\u001b[0m                 \u001b[0mbig_batch_size\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbatch_size\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mn_jobs\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    832\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 833\u001b[0;31m                 \u001b[0mislice\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mitertools\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mislice\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbig_batch_size\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    834\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mislice\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    835\u001b[0m                     \u001b[0;32mreturn\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_validation.py\u001b[0m in \u001b[0;36m<genexpr>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m    281\u001b[0m             \u001b[0merror_score\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merror_score\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    282\u001b[0m         )\n\u001b[0;32m--> 283\u001b[0;31m         \u001b[0;32mfor\u001b[0m \u001b[0mtrain\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mcv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgroups\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    284\u001b[0m     )\n\u001b[1;32m    285\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/base.py\u001b[0m in \u001b[0;36mclone\u001b[0;34m(estimator, safe)\u001b[0m\n\u001b[1;32m     71\u001b[0m                     \u001b[0;34m\"Cannot clone object. \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     72\u001b[0m                     \u001b[0;34m+\u001b[0m \u001b[0;34m\"You should provide an instance of \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 73\u001b[0;31m                     \u001b[0;34m+\u001b[0m \u001b[0;34m\"scikit-learn estimator instead of a class.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     74\u001b[0m                 )\n\u001b[1;32m     75\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: Cannot clone object. You should provide an instance of scikit-learn estimator instead of a class."]}]},{"cell_type":"code","source":["np.mean(scores)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":172},"id":"vv3h-tssqu_v","executionInfo":{"status":"error","timestamp":1645168271660,"user_tz":-540,"elapsed":285,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"d12ab3d5-d691-44ae-c650-40ac3ffcffc3"},"execution_count":60,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-60-2c58495b6ddd>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mscores\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'scores' is not defined"]}]},{"cell_type":"code","source":["dt_clf2 = DecisionTreeClassifier()\n","dt_clf2.fit(X_train, y_train)\n","\n","dt_clf.fit(X_train, y_train)\n","\n","pred1 = dt_clf.predict(X_test)\n","pred2 = dt_clf2.predict(X_test)\n","\n","print(pred1)\n","print(pred2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":245},"id":"UqC63Y_zq6sN","executionInfo":{"status":"error","timestamp":1645169176078,"user_tz":-540,"elapsed":280,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"afd7a42f-e08c-4afa-ea20-52bc430d201d"},"execution_count":64,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-64-742eec9727e7>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mdt_clf2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mdt_clf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mpred1\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdt_clf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: fit() missing 1 required positional argument: 'y'"]}]},{"cell_type":"code","source":["grid_param = {\n","    'max_depth': [1, 2, 3],\n","    'min_samples_split' : [2, 3, 4]\n","}\n","grid_param"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vzXsbeEos0jW","executionInfo":{"status":"ok","timestamp":1645169257066,"user_tz":-540,"elapsed":283,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}},"outputId":"c47fcdf4-9796-45ea-8da1-282e5becab88"},"execution_count":66,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'max_depth': [1, 2, 3], 'min_samples_split': [2, 3, 4]}"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["from sklearn.model_selection import GridSearchCV\n","\n","dt_clf = DecisionTreeClassifier()\n","grid_dtree = GridSearchCV(dt_clf, param_grid=grid_param, cv=3, refit=True)\n"],"metadata":{"id":"Iy2_s-qGskyD","executionInfo":{"status":"ok","timestamp":1645169182789,"user_tz":-540,"elapsed":273,"user":{"displayName":"이충일","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"14549651031576837673"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["grid_dtree.fit(X_train, y_train)"],"metadata":{"id":"n6KuDFWewcx3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["scores_df = pd.DataFrame(grid_dtree.cv_results_)\n","scores_df[['params', 'mean_test_score', 'rank_test_score', 'split0_test_score', 'split1_test_score', 'split2_test_score']]"],"metadata":{"id":"gGkyF7ONwet6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["grid_dtree.best_params"],"metadata":{"id":"vR-ygtGlwgu6"},"execution_count":null,"outputs":[]}]}