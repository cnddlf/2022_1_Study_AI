{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"SVM(0223)","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyPChKBWNLn6jX2To1tK06oG"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# 1. 데이터 읽기"],"metadata":{"id":"JY5Qbo1j_uuQ"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VELCGb8w_o-j","executionInfo":{"status":"ok","timestamp":1661340452232,"user_tz":-540,"elapsed":544,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"7a1a9d44-0ffd-4103-d15a-89ed99b1607d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'data': array([[1.799e+01, 1.038e+01, 1.228e+02, ..., 2.654e-01, 4.601e-01,\n","         1.189e-01],\n","        [2.057e+01, 1.777e+01, 1.329e+02, ..., 1.860e-01, 2.750e-01,\n","         8.902e-02],\n","        [1.969e+01, 2.125e+01, 1.300e+02, ..., 2.430e-01, 3.613e-01,\n","         8.758e-02],\n","        ...,\n","        [1.660e+01, 2.808e+01, 1.083e+02, ..., 1.418e-01, 2.218e-01,\n","         7.820e-02],\n","        [2.060e+01, 2.933e+01, 1.401e+02, ..., 2.650e-01, 4.087e-01,\n","         1.240e-01],\n","        [7.760e+00, 2.454e+01, 4.792e+01, ..., 0.000e+00, 2.871e-01,\n","         7.039e-02]]),\n"," 'target': array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,\n","        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,\n","        0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0,\n","        1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0,\n","        1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n","        1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n","        0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n","        1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1,\n","        1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0,\n","        0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0,\n","        1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1,\n","        1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","        0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1,\n","        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n","        1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0,\n","        0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n","        0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0,\n","        1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1,\n","        1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n","        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n","        1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\n","        1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n","        1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1,\n","        1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n","        1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1]),\n"," 'frame': None,\n"," 'target_names': array(['malignant', 'benign'], dtype='<U9'),\n"," 'DESCR': '.. _breast_cancer_dataset:\\n\\nBreast cancer wisconsin (diagnostic) dataset\\n--------------------------------------------\\n\\n**Data Set Characteristics:**\\n\\n    :Number of Instances: 569\\n\\n    :Number of Attributes: 30 numeric, predictive attributes and the class\\n\\n    :Attribute Information:\\n        - radius (mean of distances from center to points on the perimeter)\\n        - texture (standard deviation of gray-scale values)\\n        - perimeter\\n        - area\\n        - smoothness (local variation in radius lengths)\\n        - compactness (perimeter^2 / area - 1.0)\\n        - concavity (severity of concave portions of the contour)\\n        - concave points (number of concave portions of the contour)\\n        - symmetry\\n        - fractal dimension (\"coastline approximation\" - 1)\\n\\n        The mean, standard error, and \"worst\" or largest (mean of the three\\n        worst/largest values) of these features were computed for each image,\\n        resulting in 30 features.  For instance, field 0 is Mean Radius, field\\n        10 is Radius SE, field 20 is Worst Radius.\\n\\n        - class:\\n                - WDBC-Malignant\\n                - WDBC-Benign\\n\\n    :Summary Statistics:\\n\\n    ===================================== ====== ======\\n                                           Min    Max\\n    ===================================== ====== ======\\n    radius (mean):                        6.981  28.11\\n    texture (mean):                       9.71   39.28\\n    perimeter (mean):                     43.79  188.5\\n    area (mean):                          143.5  2501.0\\n    smoothness (mean):                    0.053  0.163\\n    compactness (mean):                   0.019  0.345\\n    concavity (mean):                     0.0    0.427\\n    concave points (mean):                0.0    0.201\\n    symmetry (mean):                      0.106  0.304\\n    fractal dimension (mean):             0.05   0.097\\n    radius (standard error):              0.112  2.873\\n    texture (standard error):             0.36   4.885\\n    perimeter (standard error):           0.757  21.98\\n    area (standard error):                6.802  542.2\\n    smoothness (standard error):          0.002  0.031\\n    compactness (standard error):         0.002  0.135\\n    concavity (standard error):           0.0    0.396\\n    concave points (standard error):      0.0    0.053\\n    symmetry (standard error):            0.008  0.079\\n    fractal dimension (standard error):   0.001  0.03\\n    radius (worst):                       7.93   36.04\\n    texture (worst):                      12.02  49.54\\n    perimeter (worst):                    50.41  251.2\\n    area (worst):                         185.2  4254.0\\n    smoothness (worst):                   0.071  0.223\\n    compactness (worst):                  0.027  1.058\\n    concavity (worst):                    0.0    1.252\\n    concave points (worst):               0.0    0.291\\n    symmetry (worst):                     0.156  0.664\\n    fractal dimension (worst):            0.055  0.208\\n    ===================================== ====== ======\\n\\n    :Missing Attribute Values: None\\n\\n    :Class Distribution: 212 - Malignant, 357 - Benign\\n\\n    :Creator:  Dr. William H. Wolberg, W. Nick Street, Olvi L. Mangasarian\\n\\n    :Donor: Nick Street\\n\\n    :Date: November, 1995\\n\\nThis is a copy of UCI ML Breast Cancer Wisconsin (Diagnostic) datasets.\\nhttps://goo.gl/U2Uwz2\\n\\nFeatures are computed from a digitized image of a fine needle\\naspirate (FNA) of a breast mass.  They describe\\ncharacteristics of the cell nuclei present in the image.\\n\\nSeparating plane described above was obtained using\\nMultisurface Method-Tree (MSM-T) [K. P. Bennett, \"Decision Tree\\nConstruction Via Linear Programming.\" Proceedings of the 4th\\nMidwest Artificial Intelligence and Cognitive Science Society,\\npp. 97-101, 1992], a classification method which uses linear\\nprogramming to construct a decision tree.  Relevant features\\nwere selected using an exhaustive search in the space of 1-4\\nfeatures and 1-3 separating planes.\\n\\nThe actual linear program used to obtain the separating plane\\nin the 3-dimensional space is that described in:\\n[K. P. Bennett and O. L. Mangasarian: \"Robust Linear\\nProgramming Discrimination of Two Linearly Inseparable Sets\",\\nOptimization Methods and Software 1, 1992, 23-34].\\n\\nThis database is also available through the UW CS ftp server:\\n\\nftp ftp.cs.wisc.edu\\ncd math-prog/cpo-dataset/machine-learn/WDBC/\\n\\n.. topic:: References\\n\\n   - W.N. Street, W.H. Wolberg and O.L. Mangasarian. Nuclear feature extraction \\n     for breast tumor diagnosis. IS&T/SPIE 1993 International Symposium on \\n     Electronic Imaging: Science and Technology, volume 1905, pages 861-870,\\n     San Jose, CA, 1993.\\n   - O.L. Mangasarian, W.N. Street and W.H. Wolberg. Breast cancer diagnosis and \\n     prognosis via linear programming. Operations Research, 43(4), pages 570-577, \\n     July-August 1995.\\n   - W.H. Wolberg, W.N. Street, and O.L. Mangasarian. Machine learning techniques\\n     to diagnose breast cancer from fine-needle aspirates. Cancer Letters 77 (1994) \\n     163-171.',\n"," 'feature_names': array(['mean radius', 'mean texture', 'mean perimeter', 'mean area',\n","        'mean smoothness', 'mean compactness', 'mean concavity',\n","        'mean concave points', 'mean symmetry', 'mean fractal dimension',\n","        'radius error', 'texture error', 'perimeter error', 'area error',\n","        'smoothness error', 'compactness error', 'concavity error',\n","        'concave points error', 'symmetry error',\n","        'fractal dimension error', 'worst radius', 'worst texture',\n","        'worst perimeter', 'worst area', 'worst smoothness',\n","        'worst compactness', 'worst concavity', 'worst concave points',\n","        'worst symmetry', 'worst fractal dimension'], dtype='<U23'),\n"," 'filename': 'breast_cancer.csv',\n"," 'data_module': 'sklearn.datasets.data'}"]},"metadata":{},"execution_count":1}],"source":["# 유방암 데이터를 읽어오기\n","import sklearn.datasets as datasets\n","\n","cancer = datasets.load_breast_cancer()\n","cancer"]},{"cell_type":"code","source":["# 데이터 프레임으로 변경하고 info 정보를 확인하시오.\n","import pandas as pd\n","\n","df_cancer = pd.DataFrame(data = cancer.data, columns = cancer.feature_names)\n","df_cancer.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I0nyty4xAxeV","executionInfo":{"status":"ok","timestamp":1661340458159,"user_tz":-540,"elapsed":400,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"20e6039f-10cc-48eb-aed7-92c85e496867"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 569 entries, 0 to 568\n","Data columns (total 30 columns):\n"," #   Column                   Non-Null Count  Dtype  \n","---  ------                   --------------  -----  \n"," 0   mean radius              569 non-null    float64\n"," 1   mean texture             569 non-null    float64\n"," 2   mean perimeter           569 non-null    float64\n"," 3   mean area                569 non-null    float64\n"," 4   mean smoothness          569 non-null    float64\n"," 5   mean compactness         569 non-null    float64\n"," 6   mean concavity           569 non-null    float64\n"," 7   mean concave points      569 non-null    float64\n"," 8   mean symmetry            569 non-null    float64\n"," 9   mean fractal dimension   569 non-null    float64\n"," 10  radius error             569 non-null    float64\n"," 11  texture error            569 non-null    float64\n"," 12  perimeter error          569 non-null    float64\n"," 13  area error               569 non-null    float64\n"," 14  smoothness error         569 non-null    float64\n"," 15  compactness error        569 non-null    float64\n"," 16  concavity error          569 non-null    float64\n"," 17  concave points error     569 non-null    float64\n"," 18  symmetry error           569 non-null    float64\n"," 19  fractal dimension error  569 non-null    float64\n"," 20  worst radius             569 non-null    float64\n"," 21  worst texture            569 non-null    float64\n"," 22  worst perimeter          569 non-null    float64\n"," 23  worst area               569 non-null    float64\n"," 24  worst smoothness         569 non-null    float64\n"," 25  worst compactness        569 non-null    float64\n"," 26  worst concavity          569 non-null    float64\n"," 27  worst concave points     569 non-null    float64\n"," 28  worst symmetry           569 non-null    float64\n"," 29  worst fractal dimension  569 non-null    float64\n","dtypes: float64(30)\n","memory usage: 133.5 KB\n"]}]},{"cell_type":"code","source":["# 레이블 정보의 종류별 개수를 구하시오\n","df_labels = pd.DataFrame(cancer.target)\n","df_labels.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9robvLVDCGPD","executionInfo":{"status":"ok","timestamp":1661340461315,"user_tz":-540,"elapsed":395,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"c0ed8ae7-3495-48ce-cf40-8248e8c98841"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1    357\n","0    212\n","dtype: int64"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["#2. 모델 만들기"],"metadata":{"id":"G6gPLur5C3TN"}},{"cell_type":"markdown","source":["##2.1 모델 선택"],"metadata":{"id":"cSt6OCmLC8zc"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","plt.scatter(df_cancer['mean radius'], df_cancer['worst symmetry'], c=df_labels)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"rSjTko8JC6La","executionInfo":{"status":"ok","timestamp":1661340464113,"user_tz":-540,"elapsed":605,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"ce33722b-bf20-4c00-97d0-b33cc0f44e2b"},"execution_count":4,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["##2.2 모델 만들기"],"metadata":{"id":"OokrYH1pDyPj"}},{"cell_type":"code","source":["import sklearn.svm as svm\n","\n","svm_clf = svm.SVC(kernel = 'linear')"],"metadata":{"id":"NOrq80SSD1py","executionInfo":{"status":"ok","timestamp":1661340468024,"user_tz":-540,"elapsed":546,"user":{"displayName":"이충일","userId":"14549651031576837673"}}},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":["##2.3 훈련 및 검증 데이터 구하기"],"metadata":{"id":"tIBm1euXD8WP"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test = train_test_split(df_cancer, df_labels, test_size=0.2, random_state=62)"],"metadata":{"id":"nKcLeK82FJqn","executionInfo":{"status":"ok","timestamp":1661340472046,"user_tz":-540,"elapsed":482,"user":{"displayName":"이충일","userId":"14549651031576837673"}}},"execution_count":6,"outputs":[]},{"cell_type":"markdown","source":["##2.4 정확도"],"metadata":{"id":"BnDv2WHEFn-Z"}},{"cell_type":"code","source":["svm_clf.fit(X_train, y_train.values.reshape(-1))\n","svm_clf.score(X_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FzcPT620FnJE","executionInfo":{"status":"ok","timestamp":1661340476557,"user_tz":-540,"elapsed":1698,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"207469c9-0463-4a44-f4d1-a319d6056e01"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9473684210526315"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["#3. 스케일링"],"metadata":{"id":"lSM_osKzGNBf"}},{"cell_type":"markdown","source":["##3.1 표준화"],"metadata":{"id":"BeH4I8uCN9cf"}},{"cell_type":"code","source":["# 표준화(StandardScaler)를 이용하여 정확도를 구하시오.\n","from sklearn.preprocessing import StandardScaler\n","\n","scaler = StandardScaler()\n","scaler.fit(df_cancer)\n","standard_scaled = scaler.transform(df_cancer)\n","standard_scaled[:2]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HfW624V3GSNL","executionInfo":{"status":"ok","timestamp":1661340526110,"user_tz":-540,"elapsed":479,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"986cf6c5-6864-4d5a-b3d9-f53af04dc2fd"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1.09706398e+00, -2.07333501e+00,  1.26993369e+00,\n","         9.84374905e-01,  1.56846633e+00,  3.28351467e+00,\n","         2.65287398e+00,  2.53247522e+00,  2.21751501e+00,\n","         2.25574689e+00,  2.48973393e+00, -5.65265059e-01,\n","         2.83303087e+00,  2.48757756e+00, -2.14001647e-01,\n","         1.31686157e+00,  7.24026158e-01,  6.60819941e-01,\n","         1.14875667e+00,  9.07083081e-01,  1.88668963e+00,\n","        -1.35929347e+00,  2.30360062e+00,  2.00123749e+00,\n","         1.30768627e+00,  2.61666502e+00,  2.10952635e+00,\n","         2.29607613e+00,  2.75062224e+00,  1.93701461e+00],\n","       [ 1.82982061e+00, -3.53632408e-01,  1.68595471e+00,\n","         1.90870825e+00, -8.26962447e-01, -4.87071673e-01,\n","        -2.38458552e-02,  5.48144156e-01,  1.39236330e-03,\n","        -8.68652457e-01,  4.99254601e-01, -8.76243603e-01,\n","         2.63326966e-01,  7.42401948e-01, -6.05350847e-01,\n","        -6.92926270e-01, -4.40780058e-01,  2.60162067e-01,\n","        -8.05450380e-01, -9.94437403e-02,  1.80592744e+00,\n","        -3.69203222e-01,  1.53512599e+00,  1.89048899e+00,\n","        -3.75611957e-01, -4.30444219e-01, -1.46748968e-01,\n","         1.08708430e+00, -2.43889668e-01,  2.81189987e-01]])"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test = train_test_split(standard_scaled, df_labels, test_size=0.2, random_state = 62)"],"metadata":{"id":"1ihSAxCQLsD7","executionInfo":{"status":"ok","timestamp":1661340545279,"user_tz":-540,"elapsed":410,"user":{"displayName":"이충일","userId":"14549651031576837673"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["svm_clf = svm.SVC(kernel = 'linear')\n","svm_clf.fit(X_train, y_train.values.reshape(-1))\n","svm_clf.score(X_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YjNf6lydMUo-","executionInfo":{"status":"ok","timestamp":1661340549303,"user_tz":-540,"elapsed":481,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"f8395b07-e668-4558-e2c7-61ca9d6d66a6"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9824561403508771"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["##3.2 정규화"],"metadata":{"id":"B0hNSlaDOACr"}},{"cell_type":"code","source":["from sklearn.preprocessing import MinMaxScaler\n","\n","scaler = MinMaxScaler()\n","scaler.fit(df_cancer)\n","standard_scaled = scaler.transform(df_cancer)\n","standard_scaled[:2]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ycxRkesKOBwU","executionInfo":{"status":"ok","timestamp":1661340551713,"user_tz":-540,"elapsed":463,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"62aab045-93db-4568-835a-5009ed43ced0"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.52103744, 0.0226581 , 0.54598853, 0.36373277, 0.59375282,\n","        0.7920373 , 0.70313964, 0.73111332, 0.68636364, 0.60551811,\n","        0.35614702, 0.12046941, 0.3690336 , 0.27381126, 0.15929565,\n","        0.35139844, 0.13568182, 0.30062512, 0.31164518, 0.18304244,\n","        0.62077552, 0.14152452, 0.66831017, 0.45069799, 0.60113584,\n","        0.61929156, 0.56861022, 0.91202749, 0.59846245, 0.41886396],\n","       [0.64314449, 0.27257355, 0.61578329, 0.50159067, 0.28987993,\n","        0.18176799, 0.20360825, 0.34875746, 0.37979798, 0.14132266,\n","        0.15643672, 0.08258929, 0.12444047, 0.12565979, 0.11938675,\n","        0.08132304, 0.0469697 , 0.25383595, 0.08453875, 0.0911101 ,\n","        0.60690146, 0.30357143, 0.53981772, 0.43521431, 0.34755332,\n","        0.15456336, 0.19297125, 0.63917526, 0.23358959, 0.22287813]])"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test = train_test_split(standard_scaled, df_labels, test_size=0.2, random_state = 62)"],"metadata":{"id":"TFki2h5aOW37","executionInfo":{"status":"ok","timestamp":1661340556274,"user_tz":-540,"elapsed":487,"user":{"displayName":"이충일","userId":"14549651031576837673"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["svm_clf = svm.SVC(kernel = 'linear')\n","svm_clf.fit(X_train, y_train.values.reshape(-1))\n","svm_clf.score(X_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O7a7J5x2OX9B","executionInfo":{"status":"ok","timestamp":1661340558775,"user_tz":-540,"elapsed":475,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"65245f0c-fcbf-4dd4-b914-5572dcbf2871"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9824561403508771"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["#4. 하이퍼 파라미터"],"metadata":{"id":"MhlGo6LdQuoA"}},{"cell_type":"code","source":["from sklearn.model_selection import GridSearchCV\n","\n","def get_best_hyper_param(clf):\n","  params={\n","      'C':cost_list\n","  }\n","\n","  grid_cv = GridSearchCV(clf, param_grid=params, scoring = 'accuracy', cv=5, verbose=1)\n","  grid_cv.fit(standard_scaled, df_labels.values.reshape(-1))\n","\n","  print('best score : ', grid_cv.best_score_)\n","  print('best param : ', grid_cv.best_params_)\n","\n","  return grid_cv"],"metadata":{"id":"f3ALPmFqOe1j","executionInfo":{"status":"ok","timestamp":1661340560876,"user_tz":-540,"elapsed":2,"user":{"displayName":"이충일","userId":"14549651031576837673"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["svm_clf = svm.SVC(kernel='linear')\n","cost_list = [0.001, 0.01, 0.1, 1, 10, 25, 50, 100]"],"metadata":{"id":"IUfRq_btRPgj","executionInfo":{"status":"ok","timestamp":1661340566999,"user_tz":-540,"elapsed":633,"user":{"displayName":"이충일","userId":"14549651031576837673"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["grid_cv = get_best_hyper_param(svm_clf)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IvcSSYBrS51e","executionInfo":{"status":"ok","timestamp":1661340569369,"user_tz":-540,"elapsed":2,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"a7b7eb40-abaf-4e0a-b73f-fb601003b6ca"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 5 folds for each of 8 candidates, totalling 40 fits\n","best score :  0.9754075454122031\n","best param :  {'C': 1}\n"]}]},{"cell_type":"code","source":["svm_clf = svm.SVC(kernel='linear')\n","cost_list = [0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 2, 3, 4, 5, 6, 7, 8, 9]"],"metadata":{"id":"RpO-XyfkS_zd","executionInfo":{"status":"ok","timestamp":1661340572408,"user_tz":-540,"elapsed":424,"user":{"displayName":"이충일","userId":"14549651031576837673"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["grid_cv = get_best_hyper_param(svm_clf)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fU6FTeRWTL-w","executionInfo":{"status":"ok","timestamp":1661340574677,"user_tz":-540,"elapsed":376,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"c74ac292-ad86-4870-88be-80cab13e0393"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 5 folds for each of 17 candidates, totalling 85 fits\n","best score :  0.9806707033069397\n","best param :  {'C': 3}\n"]}]}]}