{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"(0228-1)","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyM0ubmrWulScuNltBirFX1g"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#1. 위스콘신 유방암 데이터 셋 읽기"],"metadata":{"id":"21aHarflpxRr"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"dmzfcoYzpu_Y","executionInfo":{"status":"ok","timestamp":1661342095755,"user_tz":-540,"elapsed":448,"user":{"displayName":"이충일","userId":"14549651031576837673"}}},"outputs":[],"source":["from sklearn.datasets import load_breast_cancer\n","\n","cancer = load_breast_cancer()"]},{"cell_type":"code","source":["# 표준화\n","from sklearn.preprocessing import StandardScaler\n","\n","scaler = StandardScaler()\n","data_scaled = scaler.fit_transform(cancer.data)"],"metadata":{"id":"6HynJz35p_BN","executionInfo":{"status":"ok","timestamp":1661342100386,"user_tz":-540,"elapsed":2,"user":{"displayName":"이충일","userId":"14549651031576837673"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["# 훈련 / 검증 데이터 얻기\n","from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test = train_test_split(data_scaled, cancer.target, test_size = 0.3, random_state = 62)"],"metadata":{"id":"ezVsbi18rP41","executionInfo":{"status":"ok","timestamp":1661342105045,"user_tz":-540,"elapsed":447,"user":{"displayName":"이충일","userId":"14549651031576837673"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["# 모델 생성\n","from sklearn.linear_model import LogisticRegression\n","\n","lr_clf = LogisticRegression()\n","lr_clf.fit(X_train, y_train)\n","lr_preds = lr_clf.predict(X_test)\n","lr_preds"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TIo37md-r7Sc","executionInfo":{"status":"ok","timestamp":1661342109119,"user_tz":-540,"elapsed":602,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"f5bf6202-4026-4eaf-a812-479fe80c65bf"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1,\n","       1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n","       1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0,\n","       1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0,\n","       1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1,\n","       0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n","       1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0])"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# 지표 확인\n","from sklearn.metrics import accuracy_score, roc_auc_score\n","\n","print('accuracy : {:0.3f}'.format(accuracy_score(y_test, lr_preds)))\n","print('roc_auc: {:0.3f}'.format(roc_auc_score(y_test, lr_preds)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3pov6c0XunXj","executionInfo":{"status":"ok","timestamp":1661342112415,"user_tz":-540,"elapsed":435,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"8e314af3-41e4-4c42-a5fa-419c08e397a5"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["accuracy : 0.953\n","roc_auc: 0.942\n"]}]},{"cell_type":"code","source":["# 하이퍼 파라미터\n","from sklearn.model_selection import GridSearchCV\n","\n","params = {'penalty':['l1', 'l2'], 'C':[0.01, 0.1, 1, 5, 10]}\n","\n","grid_clf = GridSearchCV(lr_clf, param_grid = params, scoring='accuracy', cv=5)\n","grid_clf.fit(data_scaled, cancer.target)\n","\n","print('최적 하이퍼 파라미터:{0}, 최적 평균 정확도:{1:.3f}'.format(grid_clf.best_params_, grid_clf.best_score_))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"odbmvpIlr7Mq","executionInfo":{"status":"ok","timestamp":1661344401787,"user_tz":-540,"elapsed":1134,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"08075140-146e-4287-de71-8d3a071d19e8"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["최적 하이퍼 파라미터:{'C': 1, 'penalty': 'l2'}, 최적 평균 정확도:0.981\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_validation.py:372: FitFailedWarning: \n","25 fits failed out of a total of 50.\n","The score on these train-test partitions for these parameters will be set to nan.\n","If these failures are not expected, you can try to debug them by setting error_score='raise'.\n","\n","Below are more details about the failures:\n","--------------------------------------------------------------------------------\n","25 fits failed with the following error:\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_validation.py\", line 680, in _fit_and_score\n","    estimator.fit(X_train, y_train, **fit_params)\n","  File \"/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py\", line 1461, in fit\n","    solver = _check_solver(self.solver, self.penalty, self.dual)\n","  File \"/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py\", line 449, in _check_solver\n","    % (solver, penalty)\n","ValueError: Solver lbfgs supports only 'l2' or 'none' penalties, got l1 penalty.\n","\n","  warnings.warn(some_fits_failed_message, FitFailedWarning)\n","/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:972: UserWarning: One or more of the test scores are non-finite: [       nan 0.9490607         nan 0.97540755        nan 0.98068623\n","        nan 0.97015991        nan 0.97015991]\n","  category=UserWarning,\n"]}]},{"cell_type":"markdown","source":["# 1. 파일 읽기"],"metadata":{"id":"u2p6iD6EvRG1"}},{"cell_type":"code","source":["# 드라이버 로드\n","from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ww9PoUHPvTUr","executionInfo":{"status":"ok","timestamp":1661344426557,"user_tz":-540,"elapsed":3721,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"6481ad91-44ea-4a27-ca4e-6ebaeed45df2"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["# 타이타닉 정보 읽기\n","import pandas as pd\n","\n","filepath = '/content/drive/MyDrive/2022_1_Study_AI/data/titanic.csv'\n","df_titanic = pd.read_csv(filepath)\n","df_titanic.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"nO4yuRwuvU4d","executionInfo":{"status":"ok","timestamp":1661344509988,"user_tz":-540,"elapsed":609,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"e61ebbce-b596-4392-9040-79120bb1d01d"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   PassengerId  Survived  Pclass  \\\n","0            1         0       3   \n","1            2         1       1   \n","2            3         1       3   \n","3            4         1       1   \n","4            5         0       3   \n","\n","                                                Name     Sex   Age  SibSp  \\\n","0                            Braund, Mr. Owen Harris    male  22.0      1   \n","1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n","2                             Heikkinen, Miss. Laina  female  26.0      0   \n","3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n","4                           Allen, Mr. William Henry    male  35.0      0   \n","\n","   Parch            Ticket     Fare Cabin Embarked  \n","0      0         A/5 21171   7.2500   NaN        S  \n","1      0          PC 17599  71.2833   C85        C  \n","2      0  STON/O2. 3101282   7.9250   NaN        S  \n","3      0            113803  53.1000  C123        S  \n","4      0            373450   8.0500   NaN        S  "],"text/html":["\n","  <div id=\"df-3214e556-211a-4447-85df-8bf45da55dc5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.2500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C85</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.9250</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>53.1000</td>\n","      <td>C123</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>8.0500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3214e556-211a-4447-85df-8bf45da55dc5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3214e556-211a-4447-85df-8bf45da55dc5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3214e556-211a-4447-85df-8bf45da55dc5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["# 2. 데이터 추출"],"metadata":{"id":"ytVS4tbaxeSX"}},{"cell_type":"code","source":["df_data = df_titanic[['Pclass', 'Sex', 'Age']]\n","df_target = df_titanic['Survived']\n","df_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZeenA0UVxc_x","executionInfo":{"status":"ok","timestamp":1661344512992,"user_tz":-540,"elapsed":573,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"168d96a8-5848-403a-df96-587fd1b5f89c"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 3 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   Pclass  891 non-null    int64  \n"," 1   Sex     891 non-null    object \n"," 2   Age     714 non-null    float64\n","dtypes: float64(1), int64(1), object(1)\n","memory usage: 21.0+ KB\n"]}]},{"cell_type":"markdown","source":["#3. 데이터 변환"],"metadata":{"id":"H57u1_8DyKou"}},{"cell_type":"markdown","source":["##3.1 결측치 처리"],"metadata":{"id":"m3JMk8bgyNOl"}},{"cell_type":"code","source":["df_data['Age'].fillna(df_data['Age'].mean(), inplace=True)\n","df_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"epgd317LyMrl","executionInfo":{"status":"ok","timestamp":1661344515483,"user_tz":-540,"elapsed":3,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"e6458e54-a25f-4512-febd-b70a285c4229"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 3 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   Pclass  891 non-null    int64  \n"," 1   Sex     891 non-null    object \n"," 2   Age     891 non-null    float64\n","dtypes: float64(1), int64(1), object(1)\n","memory usage: 21.0+ KB\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py:6392: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  return self._update_inplace(result)\n"]}]},{"cell_type":"markdown","source":["##3.2 문자열 변환"],"metadata":{"id":"53y7Zpkd20KA"}},{"cell_type":"code","source":["from sklearn import preprocessing\n","\n","le = preprocessing.LabelEncoder()\n","le = le.fit(df_data['Sex'])\n","le.transform(df_data['Sex'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jMBjbF04yJtE","executionInfo":{"status":"ok","timestamp":1661344518108,"user_tz":-540,"elapsed":2,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"d270a33a-a81b-4e0b-c2d0-49d23efdb8e5"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1,\n","       0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0,\n","       0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1,\n","       0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1,\n","       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n","       1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1,\n","       0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n","       1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1,\n","       1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1,\n","       0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0,\n","       1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n","       0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0,\n","       1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0,\n","       0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n","       1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1,\n","       0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1,\n","       0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0,\n","       1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1,\n","       0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0,\n","       1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1,\n","       0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1,\n","       1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1,\n","       1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0,\n","       1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0,\n","       1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0,\n","       1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1,\n","       0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1,\n","       1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1,\n","       1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n","       0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0,\n","       1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1,\n","       1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n","       0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0,\n","       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0,\n","       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1,\n","       0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0,\n","       0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1])"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["df_data['Sex'] = df_data['Sex'].map({'female':0, 'male':1})\n","df_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":336},"id":"RHbvlrKY3SQn","executionInfo":{"status":"ok","timestamp":1661344523100,"user_tz":-540,"elapsed":747,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"b4f283f8-659b-4650-dd6f-2f76dd5c1913"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"Entry point for launching an IPython kernel.\n"]},{"output_type":"execute_result","data":{"text/plain":["   Pclass  Sex   Age\n","0       3    1  22.0\n","1       1    0  38.0\n","2       3    0  26.0\n","3       1    0  35.0\n","4       3    1  35.0"],"text/html":["\n","  <div id=\"df-cfd28083-c544-47a4-a30f-e9670d693967\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>22.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>38.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>26.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>35.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cfd28083-c544-47a4-a30f-e9670d693967')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cfd28083-c544-47a4-a30f-e9670d693967 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cfd28083-c544-47a4-a30f-e9670d693967');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","\n","scaler = StandardScaler()\n","standard_scaled = scaler.fit_transform(df_data)"],"metadata":{"id":"bSnYqpAm4V-i","executionInfo":{"status":"ok","timestamp":1661344526917,"user_tz":-540,"elapsed":436,"user":{"displayName":"이충일","userId":"14549651031576837673"}}},"execution_count":21,"outputs":[]},{"cell_type":"markdown","source":["#4. 모델 생성"],"metadata":{"id":"_umH5RMP5N4i"}},{"cell_type":"markdown","source":["##4.1 훈련 / 검증 데이터"],"metadata":{"id":"gneHgHBN5Pb5"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test = train_test_split(standard_scaled, df_target, test_size = 0.3, random_state = 62)"],"metadata":{"id":"AnLPYRS05pWX","executionInfo":{"status":"ok","timestamp":1661344530417,"user_tz":-540,"elapsed":421,"user":{"displayName":"이충일","userId":"14549651031576837673"}}},"execution_count":22,"outputs":[]},{"cell_type":"markdown","source":["##4.2 모델 생성 및 학습"],"metadata":{"id":"LD7LR4Mf5RHO"}},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","\n","lr = LogisticRegression()\n","lr.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rErH2uMJ541d","executionInfo":{"status":"ok","timestamp":1661344533234,"user_tz":-540,"elapsed":5,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"61fad7cc-deaf-4558-94c1-9b354e2944da"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"]},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","source":["##4.3 성능 평가"],"metadata":{"id":"lPNG4wlC6DoR"}},{"cell_type":"code","source":["lr.score(X_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jZ3SEIvE6Fii","executionInfo":{"status":"ok","timestamp":1661344537105,"user_tz":-540,"elapsed":616,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"12ab7f64-f128-4681-85b8-0df11433fc40"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7947761194029851"]},"metadata":{},"execution_count":24}]},{"cell_type":"markdown","source":["#5. 하이퍼 파라미터"],"metadata":{"id":"eKiEtWAv6IqJ"}},{"cell_type":"code","source":["from sklearn.model_selection import GridSearchCV\n","lr = LogisticRegression()\n","params = {'penalty':['l2'], 'C':[0.01, 0.1, 1, 5, 10]}\n","\n","grid_clf = GridSearchCV(lr, param_grid = params, scoring='accuracy', cv=5)\n","grid_clf.fit(standard_scaled, df_target)\n","\n","print('최적 하이퍼 파라미터:{0}, 최적 평균 정확도:{1:.3f}'.format(grid_clf.best_params_, grid_clf.best_score_))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MR9m44Ui6KvO","executionInfo":{"status":"ok","timestamp":1661345726149,"user_tz":-540,"elapsed":8,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"e720cadd-9a18-4f05-95d1-5d9037e31726"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["최적 하이퍼 파라미터:{'C': 5, 'penalty': 'l2'}, 최적 평균 정확도:0.788\n"]}]},{"cell_type":"code","source":["from sklearn.model_selection import GridSearchCV\n","lr = LogisticRegression()\n","# range(a, b, c)\n","# a부터 b까지 리스트를 만들되 a는 포함하고 b는 불포함합니다. c를 적을 경우 c만큼을 건너뛴다고 생각하면 된다.\n","\n","c_list = range(2, 9, 1)\n","params = {'penalty':['l2'], 'C':c_list}\n","\n","grid_clf = GridSearchCV(lr, param_grid = params, scoring='accuracy', cv=5)\n","grid_clf.fit(standard_scaled, df_target)\n","\n","print('최적 하이퍼 파라미터:{0}, 최적 평균 정확도:{1:.3f}'.format(grid_clf.best_params_, grid_clf.best_score_))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"18JsPd7h-zst","executionInfo":{"status":"ok","timestamp":1661345926706,"user_tz":-540,"elapsed":753,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"8e672f2b-b452-4096-ba67-fb580b533857"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["최적 하이퍼 파라미터:{'C': 4, 'penalty': 'l2'}, 최적 평균 정확도:0.788\n"]}]},{"cell_type":"markdown","source":["#6. 회귀 계수"],"metadata":{"id":"QO_l25Zo_NYN"}},{"cell_type":"markdown","source":["> 회귀 계수가 음수이면 데이터의 수치가 커질수록 결과가 작은 수일 확률이 높다. 반대로 양수가 되면 데이터의 수치가 커질수록 결과가 큰 수일 확률이 높다."],"metadata":{"id":"OU0UUH56_QCt"}},{"cell_type":"code","source":["# 하이퍼 파라미터 진행 후 최적의 모델 획득\n","lr_best = grid_clf.best_estimator_\n","# 회귀 계수 획득\n","lr_best.coef_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y_vtjw28_Wsv","executionInfo":{"status":"ok","timestamp":1661346141517,"user_tz":-540,"elapsed":416,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"a28b1b7e-40e4-4254-e0c6-5842bcb85861"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-0.97279309, -1.24468592, -0.43228629]])"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["result = pd.DataFrame(lr_best.coef_, columns=scaler.get_feature_names_out())\n","result"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":81},"id":"W0P764cK_-7O","executionInfo":{"status":"ok","timestamp":1661346200878,"user_tz":-540,"elapsed":465,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"59c0008b-4078-40f8-d460-d3fb40cdd0f5"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Pclass       Sex       Age\n","0 -0.972793 -1.244686 -0.432286"],"text/html":["\n","  <div id=\"df-4094e2a7-a500-4c84-8fd6-367eae0ef3b1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-0.972793</td>\n","      <td>-1.244686</td>\n","      <td>-0.432286</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4094e2a7-a500-4c84-8fd6-367eae0ef3b1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4094e2a7-a500-4c84-8fd6-367eae0ef3b1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4094e2a7-a500-4c84-8fd6-367eae0ef3b1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":39}]},{"cell_type":"markdown","source":["> pclass는 1, 2, 3의 정보를 갖는다. 음수이므로 숫자가 클수록 작은 수의 결과를 얻을 확률이 높다. 즉, 3등급 자리일 경우 0(죽음)일 확률이 높다."],"metadata":{"id":"0mMZ1IUgAI8j"}}]}