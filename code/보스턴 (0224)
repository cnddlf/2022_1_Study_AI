{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"보스턴 (0224)","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNEc5O5ulBnl/vbVYifuTcn"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#1. 데이터 읽어들이기"],"metadata":{"id":"mrebQKrVH9_a"}},{"cell_type":"code","source":["from sklearn.datasets import load_boston\n","\n","# boston 데이터셋 로드\n","boston = load_boston()"],"metadata":{"id":"YUU5nVweHQq3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661263904634,"user_tz":-540,"elapsed":666,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"d9149dca-0fe3-4aa3-fcf4-45633782b97b"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function load_boston is deprecated; `load_boston` is deprecated in 1.0 and will be removed in 1.2.\n","\n","    The Boston housing prices dataset has an ethical problem. You can refer to\n","    the documentation of this function for further details.\n","\n","    The scikit-learn maintainers therefore strongly discourage the use of this\n","    dataset unless the purpose of the code is to study and educate about\n","    ethical issues in data science and machine learning.\n","\n","    In this special case, you can fetch the dataset from the original\n","    source::\n","\n","        import pandas as pd\n","        import numpy as np\n","\n","\n","        data_url = \"http://lib.stat.cmu.edu/datasets/boston\"\n","        raw_df = pd.read_csv(data_url, sep=\"\\s+\", skiprows=22, header=None)\n","        data = np.hstack([raw_df.values[::2, :], raw_df.values[1::2, :2]])\n","        target = raw_df.values[1::2, 2]\n","\n","    Alternative datasets include the California housing dataset (i.e.\n","    :func:`~sklearn.datasets.fetch_california_housing`) and the Ames housing\n","    dataset. You can load the datasets as follows::\n","\n","        from sklearn.datasets import fetch_california_housing\n","        housing = fetch_california_housing()\n","\n","    for the California housing dataset and::\n","\n","        from sklearn.datasets import fetch_openml\n","        housing = fetch_openml(name=\"house_prices\", as_frame=True)\n","\n","    for the Ames housing dataset.\n","    \n","  warnings.warn(msg, category=FutureWarning)\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","\n","df_data = pd.DataFrame(boston.data, columns=boston.feature_names)\n","df_labels = pd.Series(boston.target)"],"metadata":{"id":"1OgrropPHXtr","executionInfo":{"status":"ok","timestamp":1661263914962,"user_tz":-540,"elapsed":856,"user":{"displayName":"이충일","userId":"14549651031576837673"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["# 모델 생성\n","from sklearn.linear_model import Ridge\n","\n","ridge = Ridge(alpha = 10)"],"metadata":{"id":"FPXuGVg4H2I6","executionInfo":{"status":"ok","timestamp":1661263917196,"user_tz":-540,"elapsed":471,"user":{"displayName":"이충일","userId":"14549651031576837673"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["# 교차 검증\n","# scoring = neg_mean_squared_error\n","\n","from sklearn.model_selection import cross_val_score\n","\n","neg_mse_scores = cross_val_score(ridge, df_data, df_labels, scoring = \"neg_mean_squared_error\", cv = 5)\n","neg_mse_scores"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-evMkEH9ISll","executionInfo":{"status":"ok","timestamp":1661263919146,"user_tz":-540,"elapsed":2,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"1a1c7bc3-a22f-43ca-fb96-f15bb124a75e"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([-11.4217962 , -24.29446706, -28.14355069, -74.59916618,\n","       -28.51714218])"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["import numpy as np\n","# RMSE\n","rmse = np.sqrt(neg_mse_scores)\n","rmse * -1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NGnEaF2NJ0Bi","executionInfo":{"status":"ok","timestamp":1661263922007,"user_tz":-540,"elapsed":320,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"dd4414cf-d0e2-47a1-8523-37ec7063f75f"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: RuntimeWarning: invalid value encountered in sqrt\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]},{"output_type":"execute_result","data":{"text/plain":["array([nan, nan, nan, nan, nan])"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# 평균 RMSE\n","np.mean(rmse) * -1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DFqtNR4bKP4j","executionInfo":{"status":"ok","timestamp":1661263923621,"user_tz":-540,"elapsed":2,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"c9fd1e61-db0c-4379-92a5-df4e0e84901a"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["nan"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# Ridge에 사용될 alpha 파라미터의 값들을 정의\n","alphas = [0, 0.1, 1, 10, 100]\n","\n","# alphas list 값을 iteration하면서 alpha에 따른 평균 rmse 구함\n","for alpha in alphas : \n","  ridge = Ridge(alpha = alpha)\n","\n","  # cross_val_Score를 이용하여 5 fold의 평균 RMSE 계산\n","  neg_mse_scores = cross_val_score(ridge, df_data, df_labels, scoring=\"neg_mean_squared_error\", cv=5)\n","  avg_rmse = np.mean(np.sqrt(-1 * neg_mse_scores))\n","  print('alpha {0} 일 때 5 folds의 평균 RMSE : {1:.3f}'.format(alpha,avg_rmse))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"adN57sR5LTrS","executionInfo":{"status":"ok","timestamp":1661264316728,"user_tz":-540,"elapsed":2,"user":{"displayName":"이충일","userId":"14549651031576837673"}},"outputId":"3e8f20fc-61bb-40c9-9c9e-a45f8836a5a0"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["alpha 0 일 때 5 folds의 평균 RMSE : 5.829\n","alpha 0.1 일 때 5 folds의 평균 RMSE : 5.788\n","alpha 1 일 때 5 folds의 평균 RMSE : 5.653\n","alpha 10 일 때 5 folds의 평균 RMSE : 5.518\n","alpha 100 일 때 5 folds의 평균 RMSE : 5.330\n"]}]},{"cell_type":"code","source":["# 위의 코드를 이용하여 lasso 모델을 생성하시오.\n","# 모델 생성\n","from sklearn.linear_model import Lasso\n","\n","lasso = Lasso(alpha = 10)"],"metadata":{"id":"eQ1-DBSINKNI","executionInfo":{"status":"ok","timestamp":1661264327045,"user_tz":-540,"elapsed":335,"user":{"displayName":"이충일","userId":"14549651031576837673"}}},"execution_count":10,"outputs":[]}]}